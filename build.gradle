buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.dm.gradle:bundle:0.3' // gradle bundle plugin
    }
}

apply plugin: 'java'

repositories{
    mavenCentral()
    mavenLocal()
}

// configuration for all subprojects
configure(subprojects.findAll()) { subproject ->

    repositories{
        mavenCentral()
        mavenLocal()
    }

    configurations {
        // simulate maven's "provided" scope
        provided
        compile.extendsFrom configurations.provided
        compile.transitive
    }

    apply plugin: 'java'

    jar {
        // create fat jar containing all compile dependencies
        from {
            (configurations.compile - configurations.provided)
                    .collect { it.isDirectory() ? it : zipTree(it) }
        }
    }

}

// configuration for all OSGi subprojects
configure(subprojects.findAll {it.name != 'WebracerStarter'}) { subproject ->

    apply plugin: 'bundle'

//    bundle {
//        trace = true
//    }

    dependencies {
        provided 'org.apache.felix:org.apache.felix.framework:4.4.1'
    }


}

dependencies {

    // define dependencies to subprojects for the copyToLibs task
    compile project(':WebracerTrack')
    compile project(':WebracerTrackLongImpl')
    compile project(':WebracerTrackShortImpl')
    compile project(':WebracerDB')
    compile project(':WebracerDBFileImpl')
    compile project(':WebracerRace')
    compile project(':WebracerWeb')
    compile project(':WebracerStarter')

}

task install(type: Copy, dependsOn: 'jar') {
    // copy all jars to one directory, which then can be used by OSGi framework
    into 'repoOsgi'
    from configurations.compile
            .filter {it.name.startsWith('Webracer')}
}
jar.finalizedBy install

// create/update gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}
